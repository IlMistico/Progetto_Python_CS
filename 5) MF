# 5. Extract a set of normalized tables. That is, each entry of a normalized table must contain exactly one value (not a list or a dictionary).

def normalize_table(title, movie_id, df, column):
    result = df[column].apply(pd.read_json)
    titles = df[title]
    ids = df[movie_id]
    for i in range(len(df)):
        result[i][title] = titles[i]
        result[i][movie_id] = ids[i]
    return pd.concat(result.values).reset_index().drop("index", axis = 1)


# create table(cast) from cr
cast = normalize_table("title", "movie_id", cr, "cast")

# create table(crew) from cr
crew = normalize_table("title", "movie_id", cr, "crew")

# create table(genders) from mv
genders = normalize_table("original_title", "id", mv, "genres")

# create table(keyword) from mv
keywords = normalize_table("original_title", "id", mv, "keywords")

# create table(production_companies) from mv
production_companies = normalize_table("original_title", "id", mv, "production_companies")

# create table(production_countries) from mv
production_countries = normalize_table("original_title", "id", mv, "production_countries")

# create table(spoken_languages) from mv
spoken_languages = normalize_table("original_title", "id", mv, "spoken_languages")
